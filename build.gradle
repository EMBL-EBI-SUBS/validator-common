buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'com.sourcemuse.mongo' version '1.0.0'
    id "org.springframework.boot" version "1.5.1.RELEASE"
}

group 'uk.ac.ebi.subs'
version '3.0.2-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'maven'


sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter'
}

dependencies {
    compile group: 'uk.ac.ebi.subs', name: 'subs-data-model', version: '2.7.0-SNAPSHOT'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.12'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-amqp'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'java-hamcrest', version: '2.0.0.0'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}

task sourceJar(type: Jar) { from sourceSets.main.allJava }

artifacts {
    archives jar
    archives sourceJar { classifier "sources" }
}

uploadArchives {
    repositories {
        mavenDeployer {

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

            }

            pom.project {
                packaging 'jar'

                url 'https://github.com/EMBL-EBI-SUBS/validator-common'

                scm {
                    url 'https://github.com/EMBL-EBI-SUBS/validator-common.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'subs-internal'
                        name 'EMBL-EBI-SUBS'
                        email 'subs-internal@ebi.ac.uk'
                    }
                }
            }
        }
    }
}

bootRepackage.enabled = false

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

test {
    runWithMongoDb = true
}

mongo {
    mongoVersion = "3.4.3"
}
